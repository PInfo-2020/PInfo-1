version: "3.7"

services: 

#Zookeeper service provides distributed configuration management to Kafka
    zookeeper:
        image: zookeeper:3.4.9
        container_name: zookeeper 
        hostname: zookeeper
        networks:
            - backend-network
        ports:
            - "2181:2181"
        environment:
            ZOO_MY_ID: 1
            ZOO_PORT: 2181
            ZOO_SERVERS: server.1=zookeeper:2888:3888
        volumes:
            - ./target/zk-single-kafka-single/zoo1/data:/data
            - ./target/zk-single-kafka-single/zoo1/datalog:/datalog

# kafka is the messaging backbone of the micro-service architecture. The objective is avoid point 2 point connections.
    kafka:
        image: confluentinc/cp-kafka:5.1.0
        container_name: kafka 
        hostname: kafka
        networks:
            - backend-network    
        ports:
            - "9092:9092"
        environment:
            KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://kafka:9092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
            KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
            KAFKA_BROKER_ID: 1
            KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
        volumes:
            - ./target/zk-single-kafka-single/kafka1/data:/var/lib/kafka/data
        depends_on:
            - zookeeper

    api-insta:
        container_name: api-insta    
        image: feedfusion/api-insta:latest
        hostname: api-insta
        networks:
            - backend-network
        ports:
            - "11080:18080"
        environment:
            THORNTAIL_KAFKA_DASH_CONFIGURATION_HOST: "kafka"
            THORNTAIL_KAFKA_DASH_CONFIGURATION_PORT: "9092"     
        depends_on:
            - kafka

    api-facebook:
        container_name: api-facebook    
        image: feedfusion/api-facebook:latest
        hostname: api-facebook
        networks:
            - backend-network
        ports:
            - "11080:18080"
        environment:
            THORNTAIL_KAFKA_DASH_CONFIGURATION_HOST: "kafka"
            THORNTAIL_KAFKA_DASH_CONFIGURATION_PORT: "9092"     
        depends_on:
            - kafka

    api-twitter:
        container_name: api-twitter    
        image: feedfusion/api-twitter:latest
        hostname: api-twitter
        networks:
            - backend-network
        ports:
            - "11080:18080"
        environment:
            THORNTAIL_KAFKA_DASH_CONFIGURATION_HOST: "kafka"
            THORNTAIL_KAFKA_DASH_CONFIGURATION_PORT: "9092"     
        depends_on:
            - kafka
             

    feed-service:
        container_name: feed-service    
        image: feedfusion/feed-service:latest
        hostname: feed-service
        networks:
            - backend-network
        ports:
            - "11080:18080"
        environment:
            THORNTAIL_KAFKA_DASH_CONFIGURATION_HOST: "kafka"
            THORNTAIL_KAFKA_DASH_CONFIGURATION_PORT: "9092"     
        depends_on:
            - kafka

    interact-service:
        container_name: interact-service    
        image: feedfusion/interact-service:latest
        hostname: interact-service
        networks:
            - backend-network
        ports:
            - "11080:18080"
        environment:
            THORNTAIL_KAFKA_DASH_CONFIGURATION_HOST: "kafka"
            THORNTAIL_KAFKA_DASH_CONFIGURATION_PORT: "9092"     
        depends_on:
            - kafka

    openpost-service:
        container_name: openpost-service    
        image: feedfusion/openpost-service:latest
        hostname: openpost-service
        networks:
            - backend-network
        ports:
            - "11080:18080"
        environment:
            THORNTAIL_KAFKA_DASH_CONFIGURATION_HOST: "kafka"
            THORNTAIL_KAFKA_DASH_CONFIGURATION_PORT: "9092"     
        depends_on:
            - kafka
    
    
    publish-service:
        container_name: publish-service    
        image: feedfusion/publish-service:latest
        hostname: publish-service
        networks:
            - backend-network
        ports:
            - "11080:18080"
        environment:
            THORNTAIL_KAFKA_DASH_CONFIGURATION_HOST: "kafka"
            THORNTAIL_KAFKA_DASH_CONFIGURATION_PORT: "9092"     
        depends_on:
            - kafka
    
    search-service:
        container_name: search-service    
        image: feedfusion/search-service:latest
        hostname: search-service
        networks:
            - backend-network
        ports:
            - "11080:18080"
        environment:
            THORNTAIL_KAFKA_DASH_CONFIGURATION_HOST: "kafka"
            THORNTAIL_KAFKA_DASH_CONFIGURATION_PORT: "9092"     
        depends_on:
            - kafka

    sort-service:
        container_name: sort-service    
        image: feedfusion/sort-service:latest
        hostname: sort-service
        networks:
            - backend-network
        ports:
            - "11080:18080"
        environment:
            THORNTAIL_KAFKA_DASH_CONFIGURATION_HOST: "kafka"
            THORNTAIL_KAFKA_DASH_CONFIGURATION_PORT: "9092"     
        depends_on:
            - kafka
        
    interact-service:
        container_name: interact-service    
        image: feedfusion/interact-service:latest
        hostname: interact-service
        networks:
            - backend-network
        ports:
            - "11080:18080"
        environment:
            THORNTAIL_KAFKA_DASH_CONFIGURATION_HOST: "kafka"
            THORNTAIL_KAFKA_DASH_CONFIGURATION_PORT: "9092"     
        depends_on:
            - kafka
    
    
    save-database:
        image: postgres:10
        container_name: save-database
        hostname: save-database
        networks:
            - backend-network
        environment:
            POSTGRES_USER: save_user
            POSTGRES_PASSWORD: save_paswd
            POSTGRES_DB: save
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "cpty", "-d", "save"]
            interval: 30s
            timeout: 30s
            retries: 3
        volumes:
            - pgdata-save:/var/lib/postgresql/data
            - ./test-data/counterparties.sql:/docker-entrypoint-initdb.d/init.sql
        restart: on-failure
        stdin_open: true
        tty: true

    save-service:
        container_name: save-service    
        image: feedfusion/save-service:latest
        hostname: save-service
        networks:
            - backend-network
        ports:
            - "11080:18080"
        environment:
            THORNTAIL_KAFKA_DASH_CONFIGURATION_HOST: "kafka"
            THORNTAIL_KAFKA_DASH_CONFIGURATION_PORT: "9092"
            THORNTAIL_DATASOURCES_DATA_DASH_SOURCES_INSTRUMENTDS_CONNECTION_DASH_URL: "jdbc:postgresql://save-database:5432/instrument"
            THORNTAIL_DATASOURCES_DATA_DASH_SOURCES_INSTRUMENTDS_DRIVER_DASH_NAME: 'postgresql'   
            THORNTAIL_DATASOURCES_DATA_DASH_SOURCES_INSTRUMENTDS_USER_DASH_NAME: 'save_user'
            THORNTAIL_DATASOURCES_DATA_DASH_SOURCES_INSTRUMENTDS_PASSWORD: 'save_paswd'      
        depends_on:
            - kafka
            - save-database


    users-database:
        image: postgres:10
        container_name: users-database
        hostname: users-database
        networks:
            - backend-network
        environment:
            POSTGRES_USER: users_user
            POSTGRES_PASSWORD: users_paswd
            POSTGRES_DB: user
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "cpty", "-d", "users"]
            interval: 30s
            timeout: 30s
            retries: 3
        volumes:
            - pgdata-users:/var/lib/postgresql/data
            - ./test-data/counterparties.sql:/docker-entrypoint-initdb.d/init.sql
        restart: on-failure
        stdin_open: true
        tty: true

    users-service:
        container_name: users-service    
        image: feedfusion/users-service:latest
        hostname: users-service
        networks:
            - backend-network
        ports:
            - "11080:18080"
        environment:
            THORNTAIL_KAFKA_DASH_CONFIGURATION_HOST: "kafka"
            THORNTAIL_KAFKA_DASH_CONFIGURATION_PORT: "9092"
            THORNTAIL_DATASOURCES_DATA_DASH_SOURCES_INSTRUMENTDS_CONNECTION_DASH_URL: "jdbc:postgresql://user-database:5432/instrument"
            THORNTAIL_DATASOURCES_DATA_DASH_SOURCES_INSTRUMENTDS_DRIVER_DASH_NAME: 'postgresql'   
            THORNTAIL_DATASOURCES_DATA_DASH_SOURCES_INSTRUMENTDS_USER_DASH_NAME: 'users_user'
            THORNTAIL_DATASOURCES_DATA_DASH_SOURCES_INSTRUMENTDS_PASSWORD: 'users_paswd'      
        depends_on:
            - kafka
            - users-database


volumes: 
    pgdata-save:
    pgdata-users:

networks:
    backend-network:
        driver: bridge